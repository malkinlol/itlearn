@model LanguageVM
@{
    ViewData["Title"] = "Language";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@inject ApplicationContext _context
@inject UserManager<User> _userManager
@inject IChapterService chapterService
@inject IThemeService themeService
@{
    var chapters = chapterService.GetAll()
        .GetAwaiter().GetResult()
        .Where(x => x.LanguageId == Model.LanguageId && x.IsEnable)
        .ToList();

    var isLearn = new UserLearn();
    var user = new User();

    if (User.Identity.IsAuthenticated)
    {
        user = await _userManager.FindByNameAsync(User.Identity.Name);

        isLearn = _context.UserLearns.FirstOrDefault(x => x.UserId == user.Id && x.LanguageId == Model.LanguageId);
    }
}

<input type="hidden" id="description" value="@Model.Description" />

<div style="height: 100vh; width: 100%;position:relative; background-image: url('/images/backgrounds/languageBg.jpg'); background-repeat: no-repeat; background-size: cover;">
    <div class="container">
        <div class="row">
            <div class="col-md-8 text-white">
                <div class="mt-5 mb-5">
                    <h1>@Model.Name</h1>
                    <div id="content">

                    </div>
                </div>
            </div>
            <div class="col-md-4 mt-5 text-center">
                @if (isLearn == null)
                {
                    <div class="card shadow">
                        <div class="card-body p-3">
                            <button class="btn-primary btn-custom"  data-toggle="modal" data-target="#learn">Приступить к изучению</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@if (chapters.Count != 0)
{
    <div class="container">
        <div class="row">
            <div class="col-md-8" style="background-color: #ffffff; bottom: 80px; z-index: 100;">
                <div class="accordion mt-3 mb-3">
                    @foreach (ChapterVM chapter in chapters)
                    {
                        @await Html.PartialAsync("~/Views/Home/Partial/_ChapterPartial.cshtml", chapter)
                    }
                </div>
            </div>
            <div class="col-md-4">

            </div>
        </div>
    </div>
}

<script>
    let editor;

    ClassicEditor
        .create(document.querySelector('#editor'))
        .then(newEditor => {
            editor = newEditor;
        })
        .catch(error => {
            console.error(error);
        });

    function GetDescription() {
        const editorData = editor.getData();

        document.getElementById('description').setAttribute('value', editorData);
    }
</script>

<script>
    window.onload = function () {
        document.getElementById('content').innerHTML = document.getElementById('description').value;
    };
</script>

<div class="modal fade" id="learn" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Вы уверены, что хотите изучать этот язык программирования?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("UserLearnLanguage", "Account", FormMethod.Post))
                {
                    <input type="hidden" value="@user.Id" name="UserId"/>
                    <input type="hidden" value="@Model.LanguageId" name="LanguageId"/>
                    <input type="hidden" value="@Model.Name" name="LanguageName"/>
                    <button type="submit" class="btn btn-primary">Изучать</button>
                }
            </div>
        </div>
    </div>
</div>