@model List<Course>
@{
    ViewData["Title"] = "Course";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@inject UserManager<User> _userManager
@inject ApplicationContext _contex

@{
    var user = await _userManager.FindByEmailAsync(User.Identity.Name);
    var level = 1;

    if (user.Experience < 100)
        level = 1;
    else if (user.Experience >= 100 && user.Experience < 200)
        level = 2;
    else if (user.Experience >= 200 && user.Experience < 300)
        level = 3;
    else if (user.Experience >= 300 && user.Experience < 400)
        level = 4;
    else if (user.Experience >= 400 && user.Experience < 500)
        level = 5;

    var subscribeCourses = await _contex.SubscribeCourses
.Where(x => x.UserId == user.Id)
.ToListAsync();

    var courses = new List<Course>();

    for (int i = 0; i < subscribeCourses.Count; i++)
    {
        var course = await _contex.Courses
            .Include(x => x.User)
            .Include(x => x.CourseThemes)
            .FirstOrDefaultAsync(x => x.CourseId == subscribeCourses[i].CourseId);

        courses.Add(course);
    }
}


<style>
    .course-link:hover {
        border-left: 3px solid #ffffff;
    }

    div.img-container {
        position: relative
    }

        div.img-container img {
            margin: 0;
            position: absolute;
            top: 50%;
            border-radius: 50%;
            left: 50%;
            margin-right: -50%;
            transform: translate(-50%, -50%)
        }

    .dot {
        height: 50px;
        width: 50px;
        background-color: rgba(0, 0, 0, 1);
        border-radius: 50%;
        border: 6px solid rgb(255, 255, 255);
        opacity: 0.7;
        display: inline-block;
        position: relative;
        top: 160px;
        left: 145px;
    }

        .dot span {
            margin: 0;
            position: absolute;
            font-size: 18px;
            top: 50%;
            left: 50%;
            margin-right: -50%;
            transform: translate(-50%, -50%)
        }

    .lable {
        font-size: 14px;
        background: #ad87de;
        font-weight: 600;
        text-transform: uppercase;
        padding: 2px 10px;
        border-radius: 20px;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-3" style="height: 100vh; background-color: #000000; padding-left: 0px; padding-right: 0px;">
            <div class="list-group " style="background: none;">
                <div class="img-container list-group-item" style="background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 1)), url(/images/default/editprofile.jpg);
        background-repeat: no-repeat;
        background-size: cover;
        height: 300px;
        width: 100%;
        position: relative;
        margin-top: -1px;
        border: none;
    ">
                    @if (!string.IsNullOrEmpty(user.Avatar))
                    {
                        <img src="@Url.Content(user.Avatar)" style="width: 130px; height: 130px;" />
                    }
                    else
                    {
                        <img src="~/images/default/default-person.svg" style="width: 130px; height: 130px;" />
                    }
                    <div>
                        <span class="dot text-center">
                            <span style="color: rgb(255, 255, 255)">@level</span>
                        </span>
                    </div>
                </div>
                <a href="/Account/Course" class=" course-link list-group-item text-white list-group-item-action text-uppercase " style="background: none; ">Курсы на изучении</a>
                <a href="/Account/MyCourse" class="course-link  list-group-item text-white list-group-item-action text-uppercase" style="background: none; ">Мои курсы</a>
                <a href="/Account/CompleteCourse" class="course-link  list-group-item text-white list-group-item-action text-uppercase active" style="background: none; border: 1px solid #ffffff">Законченные курсы</a>
            </div>
        </div>
        <div class="col-md-9">
            <div class="container-fluid">
                <div class="row mt-3">
                    <div class="col-md-6">
                        <p class="display-1" style="font-size: 35px">Завершенные курсы</p>
                    </div>
                    <div class="col-md-6">

                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-md-12">
                        @if (courses.Count != 0)
                        {
                            foreach (Course course in courses)
                            {
                                var finishThemeCount = _contex.ResultCourses.Count(x => x.IsFinish && x.UserId == user.Id && x.CourseId == course.CourseId);
                                var themesCount = course?.CourseThemes.Count;

                                int? persent = 0;

                                if (themesCount != null)
                                    persent = finishThemeCount * 100 / themesCount;

                                if (persent != 100)
                                    continue;

                                <div class="card shadow m-5">
                                    <div class="row no-gutters">
                                        <div class="col-md-3">
                                            <img src="@Url.Content(course.Avatar)" class="m-4" style="height: 200px; width: 250px;" alt="...">
                                        </div>
                                        <div class="col-md-9">
                                            <div class="card-body ml-5">
                                                <div class="row">
                                                    <div class="col-md-9">
                                                        <span class="small">
                                                            <svg class="svg-icon" viewBox="0 0 20 20" width="1.5em" height="1.5em">
                                                                <path d="M10,10.9c2.373,0,4.303-1.932,4.303-4.306c0-2.372-1.93-4.302-4.303-4.302S5.696,4.223,5.696,6.594C5.696,8.969,7.627,10.9,10,10.9z M10,3.331c1.801,0,3.266,1.463,3.266,3.263c0,1.802-1.465,3.267-3.266,3.267c-1.8,0-3.265-1.465-3.265-3.267C6.735,4.794,8.2,3.331,10,3.331z"></path>
                                                                <path d="M10,12.503c-4.418,0-7.878,2.058-7.878,4.685c0,0.288,0.231,0.52,0.52,0.52c0.287,0,0.519-0.231,0.519-0.52c0-1.976,3.132-3.646,6.84-3.646c3.707,0,6.838,1.671,6.838,3.646c0,0.288,0.234,0.52,0.521,0.52s0.52-0.231,0.52-0.52C17.879,14.561,14.418,12.503,10,12.503z"></path>
                                                            </svg>
                                                            <a href="/Account/ShowUserProfile?email=@course.User.Email" class="text-secondary small">@course.User.Email</a>
                                                        </span>
                                                        <br />
                                                        <p class="mt-4"><b>@course.Title</b></p>
                                                        <br />
                                                    </div>
                                                    <div class="col-md-3">
                                                        <span class="lable">+@course.Experience опыта</span>
                                                        <a href="/Home/CourseTheme?courseId=@course.CourseId" class="btn btn-success" style="margin-top: 130px;">Читать</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>