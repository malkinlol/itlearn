@model UserVM
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@inject ApplicationContext _context
@inject UserManager<User> _userManager
@{
    var level = 1;

    if (Model.Experience < 100)
        level = 1;
    else if (Model.Experience >= 100 && Model.Experience < 200)
        level = 2;
    else if (Model.Experience >= 200 && Model.Experience < 300)
        level = 3;
    else if (Model.Experience >= 300 && Model.Experience < 400)
        level = 4;
    else if (Model.Experience >= 400 && Model.Experience < 500)
        level = 5;

    var education = await _context.Educations
        .FirstOrDefaultAsync(x => x.EducationId == Model.SelectedEducationId);

    var job = await _context.Jobs
        .FirstOrDefaultAsync(x => x.JobId == Model.SelectedJobId);

    TimeSpan spWorkMin = TimeSpan.FromMinutes(Model.Time);
    string workHours = spWorkMin.ToString(@"hh\:mm");

    var subscribeCourses = await _context.SubscribeCourses
       .Where(x => x.UserId == Model.UserId)
       .ToListAsync();

    var courses = new List<Course>();

    for (int i = 0; i < subscribeCourses.Count; i++)
    {
        var course = await _context.Courses
            .Include(x => x.User)
            .Include(x => x.CourseThemes)
            .FirstOrDefaultAsync(x => x.CourseId == subscribeCourses[i].CourseId);

        courses.Add(course);
    }

    var countComplete = 0;

    if (courses.Count != 0)
    {
        foreach (Course course in courses)
        {
            var finishThemeCount = _context.ResultCourses.Count(x => x.IsFinish && x.UserId == Model.UserId && x.CourseId == course.CourseId);
            var themesCount = course?.CourseThemes.Count;

            int? persent = 0;

            if (themesCount != null)
                persent = finishThemeCount * 100 / themesCount;

            if (persent == 100)
            {
                countComplete++;
            }
        }
    }

    var user = await _userManager.FindByNameAsync(User.Identity.Name);

    var learnLanguages = _context.UserLearns
        .Where(x => x.UserId == user.Id)
        .ToList();

    var languages = _context.Languages
        .Include(x => x.Chapters)
        .ToList();

    var management = _context.Managements
        .Where(x => x.UserId == user.Id)
        .ToList();

    var userLanguages = new List<UserLearn>();

    for (int i = 0; i < learnLanguages.Count; i++)
    {
        var countTheme = 0;
        var countEnableTheme = 0;

        for (int j = 0; j < languages.Count; j++)
        {
            if (learnLanguages[i].LanguageId == languages[j].LanguageId)
            {
                var chapters = languages[j].Chapters.ToList();
                for (int k = 0; k < chapters.Count; k++)
                {
                    countTheme += _context.Themes
                        .Count(x => x.ChapterId == chapters[k].ChapterId);

                    var themes = _context.Themes
                        .Where(x => x.ChapterId == chapters[k].ChapterId)
                        .ToList();

                    for (int q = 0; q < themes.Count; q++)
                    {
                        for (int l = 0; l < management.Count; l++)
                        {
                            if (themes[q].IsEnable && themes[q].ThemeId == management[l].ThemeId && management[l].IsEnable)
                            {
                                countEnableTheme++;
                                break;
                            }
                        }
                    }
                }

                userLanguages.Add(new UserLearn() { LanguageName = learnLanguages[i].LanguageName, CountAllTheme = countTheme, CountLearnTheme = countEnableTheme });
                break;
            }
        }
    }
}

<style>
    .icon {
        display: inline-block;
        height: 40px;
        width: 40px;
        background-color: gray;
        border-radius: 50%;
        color: #ffffff;
        stroke-width: 0;
        stroke: currentColor;
        fill: currentColor;
    }

    .title-text {
        font-size: 30px !important;
        padding: 15px;
    }

    title-hr {
        margin: 15px !important;
    }

    .title-input {
        padding-left: 15px;
    }

    .input-group {
        padding-left: 15px;
        padding-right: 15px;
    }

    div.img-container {
        position: relative
    }

        div.img-container img {
            margin: 0;
            position: absolute;
            top: 50%;
            border-radius: 50%;
            left: 50%;
            margin-right: -50%;
            transform: translate(-50%, -50%)
        }

        div.img-container div img {
            margin: 0;
            position: absolute;
            top: 50%;
            border-radius: 50%;
            left: 50%;
            margin-right: -50%;
            transform: translate(-50%, -50%)
        }

        div.img-container div {
            margin: 0;
            position: absolute;
            top: 50%;
            left: 50%;
            margin-right: -50%;
            transform: translate(-50%, -50%)
        }

    .dot {
        height: 50px;
        width: 50px;
        background-color: rgba(0, 0, 0, 1);
        border-radius: 50%;
        border: 6px solid rgb(255, 255, 255);
        opacity: 0.7;
        display: inline-block;
        position: relative;
        top: 40px;
        right: 40px;
    }

        .dot span {
            margin: 0;
            position: absolute;
            font-size: 18px;
            top: 50%;
            left: 50%;
            margin-right: -50%;
            transform: translate(-50%, -50%)
        }

    .link-profile {
        padding-bottom: 3px;
    }

        .link-profile:hover {
            border-bottom: 3px solid rgb(255, 255, 255);
        }

    .icon:hover {
        color: rgba(0, 0, 0, 1);
        background-color: rgba(131, 131, 131, 0.00) !important;
        border-radius: 50%;
    }

    .card {
        background-color: #222b3a;
    }
</style>


<div style="background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 1)), url(/images/default/editprofile.jpg);
        background-repeat: no-repeat;
        background-size: cover;
        height: 379px;
        width: 100%;
        position: relative;
        margin-top: -1px;
    ">
    <div class="pt-2 pr-2">
        <div class="text-right">
            <a href="/Account/EditProfile" style="color: white;">
                <svg class="icon" viewBox="0 0 20 20">
                    <path d="M10,1.445c-4.726,0-8.555, 3.829-8.555,8.555c0,4.725,3.829,8.555,8.555,8.555c4.725,0,8.555-3.83,8.555-8.555C18.555,5.274,14.725,1.445,10,1.445 M10,17.654c-4.221,0-7.654-3.434-7.654-7.654c0-4.221,3.433-7.654,7.654-7.654c4.222,0,7.654,3.433,7.654,7.654C17.654,14.221,14.222,17.654,10,17.654 M14.39,10c0,0.248-0.203,0.45-0.45,0.45H6.06c-0.248,0-0.45-0.203-0.45-0.45s0.203-0.45,0.45-0.45h7.879C14.187,9.55,14.39,9.752,14.39,10 M14.39,12.702c0,0.247-0.203,0.449-0.45,0.449H6.06c-0.248,0-0.45-0.202-0.45-0.449c0-0.248,0.203-0.451,0.45-0.451h7.879C14.187,12.251,14.39,12.454,14.39,12.702 M14.39,7.298c0,0.248-0.203,0.45-0.45,0.45H6.06c-0.248,0-0.45-0.203-0.45-0.45s0.203-0.45,0.45-0.45h7.879C14.187,6.848,14.39,7.051,14.39,7.298"></path>
                </svg>
            </a>
        </div>
    </div>
    <div>
        <div class="img-container" style="height:200px">
            @if (!string.IsNullOrEmpty(Model.Avatar))
            {
                <img src="@Url.Content(Model.Avatar)" style="width: 130px; height: 130px;" />
            }
            else
            {
                <img src="~/images/default/default-person.svg" style="width: 130px; height: 130px;" />
            }
            <div>
                <span class="dot text-center">
                    <span style="color: rgb(255, 255, 255)">@level</span>
                </span>
            </div>
        </div>
        <div class="text-center text-white" style="margin-top: -20px;">
            <p class="title-text display-1">@Model.FirstName @Model.LastName</p>
        </div>
    </div>
    <div class="mt-5" style="">
        <ul class="nav justify-content-center text-uppercase" style="font-size: 22px;">
            <li class="link-profile ml-4 mr-4">
                <a href="#" style="text-decoration: none; color: rgb(255, 255, 255)">Профиль</a>
            </li>
            @*<li class="link-profile ml-4 mr-4">
                    <a href="#" style="text-decoration: none; color: rgb(255, 255, 255)">Сертификаты</a>
                </li>*@
            <li class="link-profile ml-4 mr-4">
                <a href="/Account/Stats" style="text-decoration: none; color: rgb(255, 255, 255)">Статистика</a>
            </li>
            <li class="link-profile ml-4 mr-4">
                <a href="/Account/MyCourse" style="text-decoration: none; color: rgb(255, 255, 255)">Мои курсы</a>
            </li>
            <li class="link-profile ml-4 mr-4">
                <a href="/Account/Leaders" style="text-decoration: none; color: rgb(255, 255, 255)">Лидеры</a>
            </li>
        </ul>
    </div>
</div>
<hr style="margin: 0; padding: 0; border: 1px solid #ffffff" />
<div style="background-color: rgba(0, 0, 0, 1); height: 2000px; margin-bottom: 0; padding-bottom: 0;">
    <div class="container-fluid">
        <div class="row pt-4 text-center">
            <div class="col-md-6">
                <p style=" color: white">
                    <img height="50" width="40" style="padding-bottom: 10px;" src="https://img.icons8.com/dusk/64/000000/book.png" />
                    <b style="font-size: 30px;">@countComplete</b>
                    <span class="ml-2" style="font-size: 20px;">Завершенные курсы</span>
                </p>
            </div>
            <div class="col-md-6">
                <p style=" color: white">
                    <img height="60" width="50" style="padding-bottom: 10px;" src="https://img.icons8.com/plasticine/100/000000/time.png" />
                    <b style="font-size: 30px;">@workHours</b>
                    <span class="ml-2" style="font-size: 20px;">Часы потраченные на изучение</span>
                </p>
            </div>
        </div>
    </div>
    <div class="container">

        <div class="row mt-4">
            <div class="col-md-5">
                <div class="card shadow">
                    <div>
                        <p class="title-text display-1 text-white">Прогресс</p>
                    </div>
                    <div class="img-container" style="height:200px">
                        <div class="text-center">
                            <img style="width: 130px;
                                    height: 130px;
                                    border: 7px solid gray;
                                    border-radius: 50%;
                                    padding: 5px;
                                    " src="https://img.icons8.com/plasticine/100/000000/uefa-euro-trophy.png" />
                            <div style="color:white; font-size: 20px; margin-top: 90px; width: 120px;">Уровень @level</div>
                        </div>
                    </div>
                    <div class="mt-4">
                        <hr class="title-hr text-white ml-3 mr-3" style="border: 0.5px solid #ffffff" />
                        <p class="title-text display-1 text-white">Освоен на ITLearn</p>
                        @foreach (UserLearn learn in userLanguages)
                        {
                            var persent = 0;
                            if (learn.CountAllTheme != 0)
                                persent = learn.CountLearnTheme * 100 / learn.CountAllTheme;

                            <div class="mt-1 mb-1 ml-3 mr-3">
                                <p class="text-white" style="font-size: 22px;"><b>@learn.LanguageName</b></p>
                                <div class="progress ">
                                    <div class="progress-bar" role="progressbar" style="width: @persent%;" aria-valuenow="@persent" aria-valuemin="0" aria-valuemax="100">@persent%</div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
            <div class="col-md-7">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card shadow">
                            <div>
                                <p class="title-text display-1 text-white">Обо мне</p>
                            </div>
                            <div class="text-white p-3">
                                <p><b>Страна: </b> @Model.Country</p>
                                <p><b>Телефон: </b> @Model.Phone</p>
                                <p><b>Сайт: </b> @Model.Site</p>
                                <p><b>Twitter: </b> @Model.Twitter</p>
                                <p><b>Facebook: </b> @Model.Facebook</p>
                                <p><b>LinkedIn: </b> @Model.LinkedIn</p>
                                <p class="p-3">@Model.AboutMe</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-4">
                    <div class="col-md-12">
                        <div class="card shadow text-center text-white">
                            <div style="margin-right: 50px;">
                                <p class="display-3">
                                    <img height="100" width="90" style="padding-bottom: 10px;" src="https://img.icons8.com/plasticine/100/000000/medal.png" />
                                    <b>@countComplete</b>
                                </p>
                            </div>
                            <p style="font-size:20px;">
                                <b>Завершенные курсы</b>
                            </p>
                        </div>
                    </div>
                </div>
                @if (Model.SelectedEducationId != 0)
                {
                    <div class="row mt-4">
                        <div class="col-md-12">
                            <div class="card p-3 shadow text-white">
                                <p class="display-1" style="font-size: 25px">Образование</p>
                                <br />
                                <div class="form-group">
                                    <label class="display-1" style="font-size: 18px;"><b>Университет:</b></label>
                                    <p class="display-1 ml-5" style="font-size: 18px;">@education.Name</p>
                                </div>
                                <div class="form-group">
                                    <label class="display-1" style="font-size: 18px;"><b>Степень:</b></label>
                                    <p class="display-1 ml-5" style="font-size: 18px;">@education.Position</p>
                                </div>
                                <div class="form-group">
                                    <label class="display-1" style="font-size: 18px;"><b>Начало обучения:</b></label>
                                    <p class="display-1 ml-5" style="font-size: 18px;">@education.DateTo.ToShortDateString()</p>
                                </div>
                                <div class="form-group">
                                    <label class="display-1" style="font-size: 18px;"><b>Окончание обучение:</b></label>
                                    <p class="display-1 ml-5" style="font-size: 18px;">@education.DateFrom.ToShortDateString()</p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.SelectedJobId != 0)
                {
                    <div class="row mt-4">
                        <div class="col-md-12">
                            <div class="card p-3 shadow text-white">
                                <p class="display-1" style="font-size: 25px">Работа</p>
                                <br />
                                <div class="form-group">
                                    <label class="display-1" style="font-size: 18px;"><b>Компания: </b></label>
                                    <p class="display-1 ml-5" style="font-size: 18px;">@job.Name</p>
                                </div>
                                <div class="form-group">
                                    <label class="display-1" style="font-size: 18px;"><b>Должность: </b></label>
                                    <p class="display-1 ml-5" style="font-size: 18px;">@job.Position</p>
                                </div>
                                <div class="form-group">
                                    <label class="display-1" style="font-size: 18px;"><b>Начало работы:</b></label>
                                    <p class="display-1 ml-5" style="font-size: 18px;">@job.DateTo.ToShortDateString()</p>
                                </div>
                                @if (job.DateFrom == new DateTime(2000, 1, 1))
                                {
                                    <div class="form-group">
                                        <label class="display-1" style="font-size: 18px;"><b>Конец работы:</b></label>
                                        <p class="display-1 ml-5" style="font-size: 18px;">В данный момент еще работаю</p>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group">
                                        <label class="display-1" style="font-size: 18px;"><b>Конец работы:</b></label>
                                        <p class="display-1 ml-5" style="font-size: 18px;">@job.DateFrom.ToShortDateString()</p>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
