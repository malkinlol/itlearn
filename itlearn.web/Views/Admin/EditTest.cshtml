@model TestVM
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@inject IThemeService themeService
@{
    var theme = await themeService.GetById(Model.ThemeId);
}

<div class="content-wrapper">
    <section class="content">
        <div class="container-fluid">
            <h1>Изменение</h1>
            <h3>Тема: @theme.Name</h3>
            <hr />
            @using (Html.BeginForm("EditTest", "Admin", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <input type="hidden" name="TestId" value="@Model.TestId" />
                <input type="hidden" name="ThemeId" value="@Model.ThemeId" />

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label"><b>Уровень сложности</b></label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="Level" value="@Model.Level">
                        @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 col-form-label"><b>Описание</b></label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="Description">
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <input type="submit" class="btn btn-outline-success" value="Изменить" />
            }
        </div>
    </section>
</div>