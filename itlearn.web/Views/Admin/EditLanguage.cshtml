@model LanguageVM
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-wrapper">
    <section class="content">
        <div class="container-fluid">
            <h1>Создание</h1>
            <hr />
            @using (Html.BeginForm("EditLanguage", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <input type="hidden" id="descriptionOld" value="@Model.Description" />
                <input type="hidden" id="descriptionNew" name="Description" />
                <input type="hidden" name="Avatar" value="@Model.Avatar" />
                <input type="hidden" name="LanguageId" value="@Model.LanguageId" />

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label"><b>Название</b></label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="Name" value="@Model.Name">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="inputAvatar" class="col-sm-2 col-form-label">Аватар</label>
                    <div class="col-sm-10">
                        <input type="file" class="form-control" id="inputAvatar" name="uploadedFile">
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 col-form-label"><b>Видимость</b></label>
                    <div class="col-sm-10">
                        <select class="form-control" name="IsEnable">
                            @if (Model.IsEnable)
                            {
                                <option value="true" selected>Включить</option>
                                <option value="false">Выключить</option>
                            }
                            else
                            {
                                <option value="true">Включить</option>
                                <option value="false" selected>Выключить</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-form-label"><b>Описание</b></label>
                    <p>
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </p>
                    <div id="editor">

                    </div>
                </div>
                <input type="submit" class="btn btn-outline-success" value="Изменить" onclick="GetDescription()" />
            }
        </div>
    </section>
</div>

<script>
    let editor;

    ClassicEditor
        .create(document.querySelector('#editor'), {
            toolbar: ['heading', '|', 'undo', 'redo', 'bold', 'italic', 'bulletedList', 'numberedList']
        })
        .then(newEditor => {
            newEditor.setData(document.getElementById('descriptionOld').value);
            editor = newEditor;
        })
        .catch(error => {
            console.error(error);
        });

    function GetDescription() {
        const editorData = editor.getData();

        document.getElementById('descriptionNew').setAttribute('value', editorData);
    }
</script>

