@model PostVM
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@inject ILanguageService _languageService
@{
    var languages = _languageService.GetAll()
        .GetAwaiter().GetResult()
        .Where(x => x.IsEnable)
        .Select(x => x.Name);
}

<div class="container mt-5">
    <div class="row">
        <h1>Создание поста</h1>
        <hr />
    </div>
    <div class="row mt-5">
        <div class="col-md-12">

            @using (Html.BeginForm("Create", "Post", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <input type="hidden" id="description" name="Message" />

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label"><b>Название</b></label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="Title" value="@Model.Title">
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 col-form-label"><b>Описание</b></label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" name="MiniDescription" value="@Model.MiniDescription">
                        @Html.ValidationMessageFor(model => model.MiniDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-form-label"><b>Сообщение</b></label>
                    <p>
                        @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                    </p>
                    <div id="editor" class="editor">

                    </div>
                </div>
                <div class="form-group">
                    <label class="col-form-label"><b>Теги</b></label>
                    <select class="form-control" name="Tags" multiple>
                        <option selected disabled>Выберите теги</option>
                        @foreach (string tag in languages)
                        {
                            <option value="@tag">@tag</option>
                        }
                    </select>
                </div>
                <input type="submit" class="btn btn-outline-success" value="Создать" onclick="GetDescription()" />
            }

        </div>
    </div>
</div>


<script>
    let editor;

    ClassicEditor
      .create(document.querySelector('#editor'), {
            toolbar: ['heading', '|', 'undo', 'redo', 'bold', 'italic', 'bulletedList', 'numberedList']
        })
        .then(newEditor => {
            editor = newEditor;
        })
        .catch(error => {
            console.error(error);
        });

    function GetDescription() {
        const editorData = editor.getData();

        document.getElementById('description').setAttribute('value', editorData);
    }
</script>


